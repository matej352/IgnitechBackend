// <auto-generated />
using System;
using IgnitechWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IgnitechWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240720145105_Added-Seeded-Data")]
    partial class AddedSeededData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.GradeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grade", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedOn = new DateTime(2024, 7, 18, 14, 51, 5, 24, DateTimeKind.Utc).AddTicks(5131),
                            SubjectId = -1,
                            Value = 3
                        },
                        new
                        {
                            Id = -2,
                            CreatedOn = new DateTime(2024, 7, 18, 14, 51, 5, 24, DateTimeKind.Utc).AddTicks(5137),
                            SubjectId = -1,
                            Value = 5
                        },
                        new
                        {
                            Id = -3,
                            CreatedOn = new DateTime(2024, 7, 18, 14, 51, 5, 24, DateTimeKind.Utc).AddTicks(5138),
                            SubjectId = -2,
                            Value = 2
                        },
                        new
                        {
                            Id = -4,
                            CreatedOn = new DateTime(2024, 7, 19, 14, 51, 5, 24, DateTimeKind.Utc).AddTicks(5139),
                            SubjectId = -2,
                            Value = 4
                        },
                        new
                        {
                            Id = -5,
                            CreatedOn = new DateTime(2024, 7, 19, 14, 51, 5, 24, DateTimeKind.Utc).AddTicks(5140),
                            SubjectId = -3,
                            Value = 1
                        },
                        new
                        {
                            Id = -6,
                            CreatedOn = new DateTime(2024, 7, 19, 14, 51, 5, 24, DateTimeKind.Utc).AddTicks(5141),
                            SubjectId = -3,
                            Value = 5
                        });
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            FirstName = "John",
                            LastName = "Doe",
                            StudentCode = new Guid("611a5d54-d103-43d0-b76b-ef5551016dcb"),
                            TeacherId = -1
                        },
                        new
                        {
                            Id = -2,
                            FirstName = "Jane",
                            LastName = "Doe",
                            StudentCode = new Guid("16cd18a5-6d54-4b6c-a73a-728af11b5fcb"),
                            TeacherId = -1
                        });
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.SubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Matematička analiza 1",
                            StudentId = -1,
                            TeacherId = -1
                        },
                        new
                        {
                            Id = -2,
                            Name = "Matematička analiza 1",
                            StudentId = -2,
                            TeacherId = -1
                        },
                        new
                        {
                            Id = -3,
                            Name = "Fizika",
                            StudentId = -1,
                            TeacherId = -1
                        },
                        new
                        {
                            Id = -4,
                            Name = "Osnove elektrotehnike",
                            StudentId = -2,
                            TeacherId = -1
                        },
                        new
                        {
                            Id = -5,
                            Name = "Uvod u programiranje",
                            StudentId = -2,
                            TeacherId = -2
                        });
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.TeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TeacherCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teacher", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            FirstName = "Luka",
                            LastName = "Modrić",
                            TeacherCode = new Guid("ae078d76-d7ae-4527-a10b-8bb23e16cb8d")
                        },
                        new
                        {
                            Id = -2,
                            FirstName = "Joško",
                            LastName = "Gvardiol",
                            TeacherCode = new Guid("9b2bc88c-dcd5-44aa-8d46-2da6a95a088e")
                        });
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.GradeEntity", b =>
                {
                    b.HasOne("IgnitechWebApi.Data.Entities.SubjectEntity", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.StudentEntity", b =>
                {
                    b.HasOne("IgnitechWebApi.Data.Entities.TeacherEntity", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.SubjectEntity", b =>
                {
                    b.HasOne("IgnitechWebApi.Data.Entities.StudentEntity", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IgnitechWebApi.Data.Entities.TeacherEntity", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.StudentEntity", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.SubjectEntity", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("IgnitechWebApi.Data.Entities.TeacherEntity", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
